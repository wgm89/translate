#!/usr/bin/php
<?php
/*
 *  saeed <wgmone@163.com>
 *  2014/07/20 - published
 */
$api = 'http://dict.youdao.com/fsearch?q=';
if (count($argv) > 1 && $argv[count($argv)-1] != '-h') {
    $arg = array_shift($argv);
    if($arg != 'php'){
        $argv = array_slice($argv, 0);
    }else{
        $argv = array_slice($argv, 1);
    }
    $word = implode(' ', $argv);
    $response = file_get_contents($api.$word);
    $xmlarray = XMLtoArray($response);
    dataPrint($xmlarray);
}else{
    _usage();
}

function dataPrint($data){

    $trans = array();
    if (isset($data['YODAODICT']['CUSTOM-TRANSLATION']['TRANSLATION'])) {
        $translation = $data['YODAODICT']['CUSTOM-TRANSLATION']['TRANSLATION'];
        $vals = getValue($translation);
        $trans['CUSTOM-TRANSLATION'] = $vals;
    }
    if (isset($data['YODAODICT']['YODAO-WEB-DICT']['WEB-TRANSLATION'])) {
        $web_translation = $data['YODAODICT']['YODAO-WEB-DICT']['WEB-TRANSLATION'];
        if (isset($web_translation[0]) && !empty($web_translation[0])) {
            $web_translation_paraphrase = array_shift($web_translation);
            $trans['WEB-TRANSLATION'] = getValue($web_translation_paraphrase['TRANS']);
        }
        if (!empty($web_translation)) {
            foreach($web_translation as $val){
                $trans['PHRASE'][$val['KEY']] = getValue($val['TRANS']);
            }
        }
    }
    $str_max_len = 0;
    ob_start();
    foreach ($trans as $tk=>$tv){
        $str_max_len = max(str_len($tk) , $str_max_len);
        echo  " \033[0;36m[".$tk."]\033[0m", PHP_EOL;
        foreach ($tv as $tv_key=>$tv_val){
            if(!is_int($tv_key)){
                $str_max_len = max(str_len($tv_key) , $str_max_len);
                echo "     \033[0;33m[".$tv_key."]\033[0m", PHP_EOL;
                foreach($tv_val as $tv_val_key=>$tv_val_val){
                    $str_max_len = max(str_len($tv_val_val) , $str_max_len);
                    echo "     ",$tv_val_key+1,'> ',$tv_val_val, PHP_EOL;
                }
            }else{
                $str_max_len = max(str_len($tv_val) , $str_max_len);
                echo ' ',$tv_key+1,'> ',$tv_val, PHP_EOL;
            }
        }
    }
    $content = ob_get_contents();
    ob_end_clean();
    $str_max_len += 10;
    if ($content){
        $prechr = chr(226).chr(149);
        echo $prechr.chr(148),$line = str_pad('', $str_max_len * 3, $prechr.chr(144)),
            $prechr.chr(151),PHP_EOL;
        echo PHP_EOL, $content, PHP_EOL;
        echo $prechr.chr(154),$line,$prechr.chr(157),PHP_EOL ;
    }else{

    echo <<<NOTFIND
     _   _ _   _ _     _     
     | \ | | | | | |   | |    
     |  \| | | | | |   | |    
     | |\  | |_| | |___| |___ 
     |_| \_|\___/|_____|_____|

NOTFIND;
    echo PHP_EOL;

    }

}

function XMLtoArray($XML)
{
    $xml_parser = xml_parser_create();
    xml_parse_into_struct($xml_parser, $XML, $vals);
    xml_parser_free($xml_parser);
    $_tmp='';
    foreach ($vals as $xml_elem) {
        $x_tag=$xml_elem['tag'];
        $x_level=$xml_elem['level'];
        $x_type=$xml_elem['type'];
        if ($x_level!=1 && $x_type == 'close') {
            if (isset($multi_key[$x_tag][$x_level]))
                $multi_key[$x_tag][$x_level]=1;
            else
                $multi_key[$x_tag][$x_level]=0;
        }
        if ($x_level!=1 && $x_type == 'complete') {
            if ($_tmp==$x_tag)
                $multi_key[$x_tag][$x_level]=1;
            $_tmp=$x_tag;
        }
    }
    foreach ($vals as $xml_elem) {
        $x_tag=$xml_elem['tag'];
        $x_level=$xml_elem['level'];
        $x_type=$xml_elem['type'];
        if ($x_type == 'open')
            $level[$x_level] = $x_tag;
        $start_level = 1;
        $php_stmt = '$xml_array';
        if ($x_type=='close' && $x_level!=1)
            $multi_key[$x_tag][$x_level]++;
        while ($start_level < $x_level) {
            $php_stmt .= '[$level['.$start_level.']]';
            if (isset($multi_key[$level[$start_level]][$start_level])
                && $multi_key[$level[$start_level]][$start_level])
                $php_stmt .= '['.($multi_key[$level[$start_level]][$start_level]-1).']';
            $start_level++;
        }
        $add='';
        if (isset($multi_key[$x_tag][$x_level]) 
            && $multi_key[$x_tag][$x_level] 
            && ($x_type=='open' || $x_type=='complete')) {
            if (!isset($multi_key2[$x_tag][$x_level]))
                $multi_key2[$x_tag][$x_level]=0;
            else
                $multi_key2[$x_tag][$x_level]++;
            $add='['.$multi_key2[$x_tag][$x_level].']';
        }
        if (isset($xml_elem['value']) 
            && trim($xml_elem['value'])!='' 
            && !array_key_exists('attributes', $xml_elem)) {
            if ($x_type == 'open')
                $php_stmt_main=$php_stmt.'[$x_type]'.$add.'[\'content\'] = $xml_elem[\'value\'];';
            else
                $php_stmt_main=$php_stmt.'[$x_tag]'.$add.' = $xml_elem[\'value\'];';
            eval($php_stmt_main);
        }
        if (array_key_exists('attributes', $xml_elem)) {
            if (isset($xml_elem['value'])) {
                $php_stmt_main=$php_stmt.'[$x_tag]'.$add.'[\'content\'] = $xml_elem[\'value\'];';
                eval($php_stmt_main);
            }
            foreach ($xml_elem['attributes'] as $key=>$value) {
                $php_stmt_att=$php_stmt.'[$x_tag]'.$add.'[$key] = $value;';
                eval($php_stmt_att);
            }
        }
    }
    return $xml_array;
}

function getValue($data){
    
    $vals = array();
    array_walk_recursive($data, function($v, $k) use(&$vals){
        array_push($vals, $v);
    });
    return $vals;

}

function str_len($str){

    $count  = 0;
    for ($i = 0; $i < strlen ( $str ); $i ++){
        $value  = ord( $str [$i]);
        if ( $value  > 127) {
            if ( $value  >= 194 &&  $value  <= 223) $i ++;
            elseif ($value >= 224 && $value <= 239) $i = $i + 2;
            elseif ($value >= 240 && $value <= 247) $i = $i + 3;
            $count += 2;
        }else{
            $count ++;
        }
    }
    return $count ;

}

function _usage(){

    echo <<<USAGE
Usage: ./translate.php [word]

USAGE;
    exit(0);
}

?>
